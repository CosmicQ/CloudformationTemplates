{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Bastion Host with auto-scaling",

  "Parameters": {
    "Environment": {
      "Type"                 : "String",
      "Default"              : "dev",
      "AllowedValues"        : [ "dev", "int", "prd" ]
    },
    "Hostname": {
      "Type"                 : "String",
      "Default"              : "bastion"
    },
    "Ec2KeyName": {
      "Description"          : "Name of an existing EC2 KeyPair to enable SSH access to the instance",
      "Type"                 : "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
    },
    "VpcStack": {
      "Description"          : "VPC Stack Name",
      "Type"                 : "String"
    }
  },

  "Outputs": {
    "AMIID"             : { "Value": { "Fn::ImportValue": "DefaultAMI" }}
  },

  "Resources": {

    "bastionEip": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain"    : "vpc"
      }
    },

    "bastionLaunchConfig": {
      "Type"       : "AWS::AutoScaling::LaunchConfiguration",
      "Properties" : {
        "EbsOptimized"      : false,
        "IamInstanceProfile": { "Fn::ImportValue": "EC2BasicFunctionsProfile" }, 
        "ImageId"           : { "Fn::ImportValue": "DefaultAMI" },
        "InstanceType"      : "t2.nano",
        "KeyName"           : { "Ref": "Ec2KeyName" },
        "SecurityGroups"    : [ { "Fn::ImportValue": {"Fn::Sub": "${VpcStack}:BastionSSH" } } ],
        "UserData"          : { "Fn::Base64": {"Fn::Join": ["", [
          "#!/bin/bash\n",
          "yum -y update && yum -y install awscli aws-cfn-bootstrap ruby wget\n",
          "\n",
          "cd /home/ec2-user\n",
          "wget https://aws-codedeploy-", { "Ref": "AWS::Region" }, ".s3.amazonaws.com/latest/install\n",
          "chmod +x ./install\n",
          "sudo ./install auto\n",
          "\n",
          "sed -i 's/HOSTNAME=localhost.localdomain/HOSTNAME=",
          { "Ref": "Hostname" },
          "-`curl -s http://169.254.169.254/latest/meta-data/local-ipv4 |awk -F. '{print $3\"-\"$4}'`",
          "/' /etc/sysconfig/network\n",
          "\n",
          "aws --region ", {"Ref": "AWS::Region"}, " ec2 disassociate-address --association-id ", 
          "`aws --output text --region ", {"Ref": "AWS::Region"}, " ec2 describe-addresses |grep ", {"Ref": "bastionEip"}, " |awk {'print $3'}`\n",
          "\n",
          "aws --region ", {"Ref": "AWS::Region"}, " ec2 associate-address --instance-id ",
          "`curl http://169.254.169.254/latest/meta-data/instance-id` --allocation-id ", {"Fn::GetAtt": ["bastionEip", "AllocationId"]}, "\n",
          "\n",
          "cat <<'EOF'>> /var/spool/cron/root\n",
          "\n",
          "*/10 * * * * echo -e '127.0.0.1\tlocalhost localhost.localdomain' > /etc/hosts && /usr/bin/aws ec2 describe-instances --region ",
          { "Ref": "AWS::Region" },
          " --filters Name=instance-state-name,Values=running --query 'Reservations[].Instances[].[PrivateIpAddress,Tags[?Key==`Name`].Value[]]' --output text | sed '$!N;s/\\n/\\t/' |sort -n -t . -k 1,1 -k 2,2 -k 3,3 -k 4,4 >> /etc/hosts\n",
          "\n",
          "0 23 * * * yum -y update --security --exclude=kernel* > /dev/null 2>&1\n",
          "EOF\n",
          "\n",
          "/opt/aws/bin/cfn-signal -e $? ",
          "         --stack ", { "Ref": "AWS::StackName" },
          "         --resource bastionAutoScalingGroup ",
          "         --region ", { "Ref": "AWS::Region" }, "\n"

        ]]}}
      }
    },

    "bastionAutoScalingGroup": {
      "Type"      : "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "LaunchConfigurationName" : { "Ref": "bastionLaunchConfig" },
        "MinSize"                 : "1",
        "MaxSize"                 : "2",
        "DesiredCapacity"         : "1",
        "VPCZoneIdentifier"       : [
                                     {"Fn::ImportValue": {"Fn::Sub": "${VpcStack}:SubnetPub1" }},
                                     {"Fn::ImportValue": {"Fn::Sub": "${VpcStack}:SubnetPub2" }}
                                    ],
        "Tags": [
          { "Key": "env", "Value": { "Ref": "Environment" }, "PropagateAtLaunch": "true" },
          { "Key": "role", "Value": "ssh-host", "PropagateAtLaunch": "true" },
          { "Key": "Name", "Value": "bastion", "PropagateAtLaunch": "true" }
        ]
      },
      "CreationPolicy": {
        "ResourceSignal": { "Timeout": "PT15M" }
      },
      "UpdatePolicy": {
        "AutoScalingRollingUpdate": {
          "MinInstancesInService": "1",
          "MaxBatchSize"         : "1",
          "PauseTime"            : "PT5M",
          "WaitOnResourceSignals": "false"
        }
      }
    }

  }
}
